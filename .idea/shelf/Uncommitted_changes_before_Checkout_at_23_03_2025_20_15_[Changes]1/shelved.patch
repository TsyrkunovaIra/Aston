Index: Main.java
===================================================================
diff --git a/Main.java b/Main.java
deleted file mode 100644
--- a/Main.java	
+++ /dev/null	
@@ -1,6 +0,0 @@
-public class Main {
-    public static void main(String[] Args)
-    {
-
-    }
-}
Index: Sorting.java
===================================================================
diff --git a/Sorting.java b/Sorting.java
deleted file mode 100644
--- a/Sorting.java	
+++ /dev/null	
@@ -1,32 +0,0 @@
-public class Sorting {
-    public static void quickSort(int[] arr, int low, int high)
-    {
-        if(low < high) {
-            int pi = partition(arr, low, high);
-            quickSort(arr, low, pi - 1);
-            quickSort(arr, pi + 1, high);
-        }
-    }
-    private static int partition(int[] arr, int low, int high) {
-        int pivot = arr[high];
-        int i = (low - 1);
-        for (int j = low; j < high; j++) {
-            if (arr[j] < pivot) {
-                i++;
-
-
-                int temp = arr[i];
-                arr[i] = arr[j];
-                arr[j] = temp;
-            }
-        }
-
-
-        int temp = arr[i + 1];
-        arr[i + 1] = arr[high];
-        arr[high] = temp;
-
-
-        return i + 1;
-    }
-}
Index: README.md
===================================================================
diff --git a/README.md b/README.md
deleted file mode 100644
--- a/README.md	
+++ /dev/null	
@@ -1,1 +0,0 @@
-# Aston
\ No newline at end of file
Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pom.xml b/pom.xml
new file mode 100644
--- /dev/null	
+++ b/pom.xml	
@@ -0,0 +1,17 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <modelVersion>4.0.0</modelVersion>
+
+    <groupId>com.home.project</groupId>
+    <artifactId>Aston1</artifactId>
+    <version>1.0-SNAPSHOT</version>
+
+    <properties>
+        <maven.compiler.source>21</maven.compiler.source>
+        <maven.compiler.target>21</maven.compiler.target>
+        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
+    </properties>
+
+</project>
\ No newline at end of file
Index: src/main/java/com/home/project/StreamSort.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/home/project/StreamSort.java b/src/main/java/com/home/project/StreamSort.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/home/project/StreamSort.java	
@@ -0,0 +1,46 @@
+package com.home.project;
+
+import java.awt.*;
+import java.util.stream.*;
+public class StreamSort {
+   public static void main(String[] args) {
+
+       Bus b1 = new Bus.BusBuilder()
+               .withNumber(1231)
+               .withMileage(32131)
+               .withModel("Maz")
+               .buidBus();
+       Bus b2 = new Bus.BusBuilder()
+               .withNumber(21351)
+               .withMileage(321546)
+               .withModel("Gaz")
+               .buidBus();
+       Bus b3 = new Bus.BusBuilder()
+               .withNumber(1655)
+               .withMileage(3213131)
+               .withModel("Vaz")
+               .buidBus();
+       Bus b4 = new Bus.BusBuilder()
+               .withNumber(213131)
+               .withMileage(2121)
+               .withModel("Belaz")
+               .buidBus();
+
+       MyArrayList buses = new MyArrayList();
+       buses.add(b4);
+       buses.add(b1);
+       buses.add(b2);
+       buses.add(b3);
+
+
+
+
+
+
+
+
+   }
+
+
+
+}
Index: src/main/java/com/home/project/User.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/home/project/User.java b/src/main/java/com/home/project/User.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/home/project/User.java	
@@ -0,0 +1,62 @@
+package com.home.project;
+
+
+public class User {
+    private String name;
+    private  String password;
+    private String email;
+    private int year;
+    public String getName() {
+        return name;
+    }
+    public void setName(String name) {
+        this.name = name;
+    }
+    public String getPassword() {
+        return password;
+    }
+    public void setPassword(String password) {
+        this.password = password;
+    }
+    public String getEmail() {
+        return email;
+    }
+    public void setEmail(String email) {
+        this.email = email;
+    }
+    public int getYear() {
+        return year;
+    }
+    public void setYear(int year) {
+        this.year = year;
+    }
+    @Override
+    public String toString(){
+        return "Name " + name + " ,password " + password + " ,email " + email;}
+    public static class UserBuilder {
+        private final User newUser;
+        public UserBuilder () {
+            newUser = new User();
+        }
+        public UserBuilder withGroup(String name) {
+            newUser.name = name;
+            return this;
+        }
+        public UserBuilder withPassword(String password) {
+            newUser.password = password;
+            return this;
+        }
+        public UserBuilder withEmail(String email) {
+            newUser.email = email;
+            return this;
+        }
+        public UserBuilder withYear(int year) {
+            newUser.year = year;
+            return this;
+        }
+        public User buidUser() {
+            return newUser;
+        }
+    }
+}
+
Index: src/main/resources/BinarySearch.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/BinarySearch.java b/src/main/resources/BinarySearch.java
new file mode 100644
--- /dev/null	
+++ b/src/main/resources/BinarySearch.java	
@@ -0,0 +1,25 @@
+import java.util.ArrayList;
+//разделено для большей инкапсуляции
+public class BinarySearch{
+    public static <T extends Comparable<T>> int binarySearch(ArrayList<T> values, T valueToFind) {
+        return binary(values, valueToFind, 0, values.size()-1);
+    }
+
+    private static<T extends Comparable<T>> int binary(ArrayList<T> values, T valueToFind, int l, int r)
+    {
+        while (l<=r) {
+            int mid = (l + r) / 2;
+            if (values.get(mid).compareTo(valueToFind) ==0) { //если объекты равны
+                return mid;
+            }
+            if (values.get(mid).compareTo(valueToFind) <0) { //если искомый больше опорного
+                l = mid+1;
+            } else if (values.get(mid).compareTo(valueToFind) >0) { //если искомый меньше опорного
+                r = mid-1;
+            }
+
+        }
+        return -1;
+
+    }
+}
\ No newline at end of file
Index: src/main/java/com/home/project/Student.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/home/project/Student.java b/src/main/java/com/home/project/Student.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/home/project/Student.java	
@@ -0,0 +1,66 @@
+package com.home.project;
+
+public class Student {
+    private  int group;
+    private int ball;
+    private  long creditNumber;
+    private int year;
+
+    public int getGroup() {
+        return group;
+    }
+    public int getBall() {
+        return ball;
+    }
+    public void setBall(int ball) {
+        this.ball = ball;
+    }
+    public long getCreditNumber() {
+        return creditNumber;
+    }
+    public void setCreditNumber(long creditNumber) {
+        this.creditNumber = creditNumber;
+    }
+    public void setGroup(int group) {
+        this.group = group;
+    }
+    public int getYear() {
+        return year;
+    }
+    public void setYear(int year) {
+        this.year = year;
+    }
+    @Override
+    public String toString(){
+        return "Group" + group + " ,ball " + ball + " ,credit number  " + creditNumber;
+    }
+    public static class StudentBuilder {
+        private Student newStudent;
+        public StudentBuilder () {
+            newStudent = new Student();
+        }
+        public StudentBuilder withGroup(int group){
+            newStudent.group = group;
+            return this;
+        }
+        public StudentBuilder withCreditNumber(long creditNumber){
+            newStudent.creditNumber = creditNumber;
+            return this;
+        }
+        public StudentBuilder withBall(int ball){
+            newStudent.ball = ball;
+            return this;
+        }
+        public StudentBuilder withYear(int year){
+            newStudent.year = year;
+            return this;
+        }
+        public Student buidStudent(){
+            return newStudent;
+        }
+    }
+}
+
+
+
+
Index: src/main/java/com/home/project/Bus.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/home/project/Bus.java b/src/main/java/com/home/project/Bus.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/home/project/Bus.java	
@@ -0,0 +1,56 @@
+package com.home.project;
+
+public class Bus {
+    private  int number;
+    private  String model;
+    private long mileage;
+    private int year;
+
+    public int getNumber() {
+        return number;
+    }
+    public String getModel() {
+        return model;
+    }
+    public long getMileage() {
+        return mileage;
+    }
+    public void setMileage(long mileage) {
+        this.mileage = mileage;
+    }
+    public int getYear() {
+        return year;
+    }
+    public void setYear(int year) {
+        this.year = year;
+    }
+    @Override
+    public String toString() {
+        return "Bus number" + number + " ,model " + model + " ,mileage " + mileage;
+    }
+    public static class BusBuilder {
+        private final Bus newBus;
+        public BusBuilder () {
+           newBus = new Bus();
+        }
+       public BusBuilder withNumber(int number){
+            newBus.number = number;
+            return this;
+       }
+       public BusBuilder withModel(String model){
+            newBus.model = model;
+            return this;
+       }
+       public BusBuilder withMileage(long mileage){
+            newBus.mileage = mileage;
+            return this;
+       }
+        public BusBuilder withYear(int year){
+            newBus.year = year;
+            return this;
+        }
+        public Bus buidBus(){
+            return newBus;
+        }
+    }
+}
Index: .gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.gitignore b/.gitignore
new file mode 100644
--- /dev/null	
+++ b/.gitignore	
@@ -0,0 +1,39 @@
+target/
+!.mvn/wrapper/maven-wrapper.jar
+!**/src/main/**/target/
+!**/src/test/**/target/
+
+### IntelliJ IDEA ###
+.idea/modules.xml
+.idea/jarRepositories.xml
+.idea/compiler.xml
+.idea/libraries/
+*.iws
+*.iml
+*.ipr
+
+### Eclipse ###
+.apt_generated
+.classpath
+.factorypath
+.project
+.settings
+.springBeans
+.sts4-cache
+
+### NetBeans ###
+/nbproject/private/
+/nbbuild/
+/dist/
+/nbdist/
+/.nb-gradle/
+build/
+!**/src/main/**/build/
+!**/src/test/**/build/
+
+### VS Code ###
+.vscode/
+
+### Mac OS ###
+.DS_Store
+/.gitignore
